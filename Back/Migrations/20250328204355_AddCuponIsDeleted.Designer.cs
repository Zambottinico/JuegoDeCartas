// <auto-generated />
using System;
using Juego_Sin_Nombre.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Juego_Sin_Nombre.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250328204355_AddCuponIsDeleted")]
    partial class AddCuponIsDeleted
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("games_id_seq");

            modelBuilder.Entity("CuponUsuario", b =>
                {
                    b.Property<int>("CuponsId")
                        .HasColumnType("int");

                    b.Property<int>("PlayersId")
                        .HasColumnType("int");

                    b.HasKey("CuponsId", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("CuponUsuario");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int")
                        .HasColumnName("character_id");

                    b.Property<int?>("Decision1")
                        .HasColumnType("int")
                        .HasColumnName("decision1");

                    b.Property<int?>("Decision2")
                        .HasColumnType("int")
                        .HasColumnName("decision2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsPlayable")
                        .HasColumnType("bit")
                        .HasColumnName("is_playable");

                    b.Property<int?>("Typeid")
                        .HasColumnType("int")
                        .HasColumnName("typeid");

                    b.HasKey("Id")
                        .HasName("card_pkey");

                    b.HasIndex("CharacterId");

                    b.HasIndex("Decision1");

                    b.HasIndex("Decision2");

                    b.HasIndex("Typeid");

                    b.ToTable("card", (string)null);
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.CardOfert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiamondPrice")
                        .HasColumnType("int");

                    b.Property<int>("GoldPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CardOferts");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Lore")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lore");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("characters_pkey");

                    b.ToTable("characters", (string)null);
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Cupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NumeroDiamantes")
                        .HasColumnType("int");

                    b.Property<int>("NumeroOro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cupones");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Decision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Army")
                        .HasColumnType("int")
                        .HasColumnName("army");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("Economy")
                        .HasColumnType("int")
                        .HasColumnName("economy");

                    b.Property<int?>("Magic")
                        .HasColumnType("int")
                        .HasColumnName("magic");

                    b.Property<int?>("Population")
                        .HasColumnType("int")
                        .HasColumnName("population");

                    b.Property<int?>("UnlockableCharacter")
                        .HasColumnType("int")
                        .HasColumnName("unlockable_character");

                    b.HasKey("Id")
                        .HasName("decision_pkey");

                    b.ToTable("decision", (string)null);
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.DiamondOfert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MontoDeDiamantes")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioEnPesos")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DiamondOfert");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Armystate")
                        .HasColumnType("int")
                        .HasColumnName("armystate");

                    b.Property<int?>("Day")
                        .HasColumnType("int")
                        .HasColumnName("day");

                    b.Property<int?>("Economystate")
                        .HasColumnType("int")
                        .HasColumnName("economystate");

                    b.Property<string>("Gamestate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gamestate");

                    b.Property<int?>("Lastcardid")
                        .HasColumnType("int")
                        .HasColumnName("lastcardid");

                    b.Property<int?>("Magicstate")
                        .HasColumnType("int")
                        .HasColumnName("magicstate");

                    b.Property<int?>("Populationstate")
                        .HasColumnType("int")
                        .HasColumnName("populationstate");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("games_pkey");

                    b.HasIndex("Lastcardid");

                    b.HasIndex("Userid");

                    b.ToTable("games", (string)null);
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.GameConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DaysToEarnDiamond")
                        .HasColumnType("int");

                    b.Property<int>("LifeRechargePrice")
                        .HasColumnType("int");

                    b.Property<int>("MinutesToEarnLife")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameConfig");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondOfferId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiamondOfferId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("types_pkey");

                    b.ToTable("types", (string)null);
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("clave");

                    b.Property<int?>("Diamonds")
                        .HasColumnType("int")
                        .HasColumnName("diamonds");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<int?>("Gold")
                        .HasColumnType("int")
                        .HasColumnName("gold");

                    b.Property<DateTime?>("LastLifeRecharge")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_life_recharge");

                    b.Property<int?>("Lives")
                        .HasColumnType("int")
                        .HasColumnName("lives");

                    b.Property<int?>("MaxLives")
                        .HasColumnType("int")
                        .HasColumnName("maxlives");

                    b.Property<int?>("Maxdays")
                        .HasColumnType("int")
                        .HasColumnName("maxdays");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Rol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Username");

                    b.HasKey("Id")
                        .HasName("usuarios_pkey");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("PlayerCharacter", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int")
                        .HasColumnName("character_id");

                    b.HasKey("PlayerId", "CharacterId")
                        .HasName("player_characters_pkey");

                    b.HasIndex("CharacterId");

                    b.ToTable("player_characters", (string)null);
                });

            modelBuilder.Entity("CuponUsuario", b =>
                {
                    b.HasOne("Juego_Sin_Nombre.Models.Cupon", null)
                        .WithMany()
                        .HasForeignKey("CuponsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Juego_Sin_Nombre.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Card", b =>
                {
                    b.HasOne("Juego_Sin_Nombre.Models.Character", "Character")
                        .WithMany("Cards")
                        .HasForeignKey("CharacterId")
                        .HasConstraintName("fk_cards_characters");

                    b.HasOne("Juego_Sin_Nombre.Models.Decision", "Decision1Navigation")
                        .WithMany("CardDecision1Navigations")
                        .HasForeignKey("Decision1")
                        .HasConstraintName("card_decision1_fkey");

                    b.HasOne("Juego_Sin_Nombre.Models.Decision", "Decision2Navigation")
                        .WithMany("CardDecision2Navigations")
                        .HasForeignKey("Decision2")
                        .HasConstraintName("card_decision2_fkey");

                    b.HasOne("Juego_Sin_Nombre.Models.Type", "Type")
                        .WithMany("Cards")
                        .HasForeignKey("Typeid")
                        .HasConstraintName("card_typeid_fkey");

                    b.Navigation("Character");

                    b.Navigation("Decision1Navigation");

                    b.Navigation("Decision2Navigation");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Game", b =>
                {
                    b.HasOne("Juego_Sin_Nombre.Models.Card", "Lastcard")
                        .WithMany("Games")
                        .HasForeignKey("Lastcardid")
                        .HasConstraintName("games_lastcardid_fkey");

                    b.HasOne("Juego_Sin_Nombre.Models.Usuario", "User")
                        .WithMany("Games")
                        .HasForeignKey("Userid")
                        .HasConstraintName("games_userid_fkey");

                    b.Navigation("Lastcard");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Invoice", b =>
                {
                    b.HasOne("Juego_Sin_Nombre.Models.DiamondOfert", "DiamondOfert")
                        .WithMany("Invoices")
                        .HasForeignKey("DiamondOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Juego_Sin_Nombre.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiamondOfert");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlayerCharacter", b =>
                {
                    b.HasOne("Juego_Sin_Nombre.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .IsRequired()
                        .HasConstraintName("player_characters_character_id_fkey");

                    b.HasOne("Juego_Sin_Nombre.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .IsRequired()
                        .HasConstraintName("player_characters_player_id_fkey");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Card", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Character", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Decision", b =>
                {
                    b.Navigation("CardDecision1Navigations");

                    b.Navigation("CardDecision2Navigations");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.DiamondOfert", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Type", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Juego_Sin_Nombre.Models.Usuario", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
